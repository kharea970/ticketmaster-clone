services:
  postgres:
    image: postgres:16-alpine
    container_name: ticketmaster_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ticketmaster_db
    ports: ["5432:5432"]
    volumes: [ postgres_data:/var/lib/postgresql/data ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d ticketmaster_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: [infra]

  redis:
    image: redis:7-alpine
    container_name: ticketmaster_redis
    restart: always
    ports: ["6380:6379"]
    command: ["redis-server","--appendonly","yes"]
    volumes: [ redis_data:/data ]
    profiles: [infra]

  elasticsearch:
    image: elastic/elasticsearch:8.15.2
    platform: linux/arm64
    container_name: ticketmaster_elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m -XX:UseSVE=0
      - CLI_JAVA_OPTS=-XX:UseSVE=0
    ulimits:
      memlock: { soft: -1, hard: -1 }
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  gateway-service:
    build:
      context: ../gateway/gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports: [ "8080:8080" ]
    environment:
      EVENT_SERVICE_URI: http://event-service:8081
      BOOKING_SERVICE_URI: http://booking-service:8082
      SEARCH_SERVICE_URI: http://search-service:8083
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: change-me
    depends_on:
      redis:
        condition: service_started

  event-service:
    build:
      context: ../services/event-service
      dockerfile: Dockerfile
    container_name: event-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ticketmaster_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      ELASTIC_HOST: http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
    profiles: [ app ]

  booking-service:
    build:
      context: ./services/reservation-service
      dockerfile: Dockerfile
    container_name: booking-service
    expose: ["8082"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ticketmaster_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      REDIS_HOST: redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    profiles: [app]

  search-service:
    build:
      context: ../services/search-service
      dockerfile: Dockerfile
    container_name: search-service
    expose: ["8083"]
    environment:
      ELASTIC_HOST: http://elasticsearch:9200
      EVENTS_INDEX: events
    depends_on:
      elasticsearch:
        condition: service_started
    profiles: [app]

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    expose: ["8084"]
    profiles: [app]

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    expose: ["8085"]
    profiles: [app]

  kibana:
    image: elastic/kibana:8.15.2
    container_name: ticketmaster_kibana
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      XPACK_SECURITY_ENABLED: "false"   # matches your ES setting
    ports:
      - "5601:5601"
    profiles: [ infra ]

volumes:
  postgres_data:
  redis_data:
  es_data:
